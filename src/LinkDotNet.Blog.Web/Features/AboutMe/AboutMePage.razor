@page "/AboutMe"
@using LinkDotNet.Blog.Web.Features.Services
@using LinkDotNet.Blog.Web.Features.AboutMe.Components
@using LinkDotNet.Blog.Web.Features.AboutMe.Components.Skill
@using LinkDotNet.Blog.Web.Features.AboutMe.Components.Talk
@inject AppConfiguration AppConfiguration
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserRecordService UserRecordService
@inject NavigationManager NavigationManager
@if (AppConfiguration.IsAboutMeEnabled)
{
    <OgData Title="@("About Me - " + AppConfiguration.ProfileInformation.Name)"
            Description="@("About Me," + AppConfiguration.ProfileInformation.Name)"
            Keywords="@AppConfiguration.ProfileInformation.Name"
            AbsolutePreviewImageUrl="@ImageUrl"></OgData>

    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-4">
                <Profile ShowAdminActions="@isAuthenticated"/>
            </div>
            <div class="col-lg-9 col-md-8 tab-container">
                <div class="row">
                    <div class="col-md12 tab-content">
                        <Talks ShowAdminActions="@isAuthenticated"></Talks>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md12 tab-content">
                        <Card Header="Skills">
                            <SkillTable ShowAdminActions="@isAuthenticated"></SkillTable>
                        </Card>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool isAuthenticated;

    private string ImageUrl => AppConfiguration.ProfileInformation.ProfilePictureUrl.ToAbsoluteUrl(NavigationManager.BaseUri);

    protected override async Task OnInitializedAsync()
    {
        var userIdentity = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity;
        if (userIdentity != null)
        {
            isAuthenticated = userIdentity.IsAuthenticated;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await UserRecordService.StoreUserRecordAsync();
        }
    }
}