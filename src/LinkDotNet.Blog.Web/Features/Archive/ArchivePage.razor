@page "/archive"
@using LinkDotNet.Blog.Infrastructure.Persistence
@using LinkDotNet.Blog.Domain
@inject IRepository<BlogPost> Repository

<OgData Title="Archive"></OgData>

<div class="ps-2">
    <h3 class="pb-3">Archive (@blogPostCount posts)</h3>

    @if (blogPostsPerYear == null)
    {
        <Loading></Loading>
    }
    else
    {
        @foreach (var yearGroup in blogPostsPerYear)
        {
            <h2>@yearGroup.Key</h2>
            <ul class="ps-5">
                @foreach (var blogPost in yearGroup.OrderByDescending(b => b.UpdatedDate))
                {
                    <li class="pt-1"><a href="/blogPost/@blogPost.Id">@blogPost.Title</a></li>
                }
            </ul>
        }
    }
</div >

@code {
    private List<IGrouping<int, BlogPostPerYear>> blogPostsPerYear;
    private int blogPostCount;

    protected override async Task OnInitializedAsync()
    {
        var blogPosts = await Repository.GetAllByProjectionAsync(
            p => new BlogPostPerYear(p.Id, p.Title, p.UpdatedDate),
            p => p.IsPublished);
        blogPostCount = blogPosts.Count;
        blogPostsPerYear = blogPosts
            .GroupBy(r => r.UpdatedDate.Year)
            .OrderByDescending(r => r.Key)
            .ToList();
    }

    private sealed record BlogPostPerYear(string Id, string Title, DateTime UpdatedDate);
}