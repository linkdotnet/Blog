@using LinkDotNet.Blog.Web.Features.Services
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorageService

<div class="position-relative d-inline-block @Class cursor-pointer" role="button" @onclick="ToggleMode" title="Toggle theme">

	@if (currentTheme == "light")
	{
		<svg xmlns="http://www.w3.org/2000/svg"
		     width="20"
		     height="20"
		     viewBox="0 0 24 24"
		     fill="none"
		     stroke="currentColor"
		     class="text-secondary">
			<circle cx="12" cy="12" r="5"/>
			<line x1="12" y1="1" x2="12" y2="3"/>
			<line x1="12" y1="21" x2="12" y2="23"/>
			<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
			<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
			<line x1="1" y1="12" x2="3" y2="12"/>
			<line x1="21" y1="12" x2="23" y2="12"/>
			<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
			<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
		</svg>
	}
	else
	{
		<svg xmlns="http://www.w3.org/2000/svg"
		     width="20"
		     height="20"
		     viewBox="0 0 24 24"
		     fill="none"
		     stroke="currentColor"
		     class="text-white">
			<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
		</svg>
	}
</div>

@code {
	[Parameter]
	public string Class { get; set; } = string.Empty;

	private const string StorageKey = "preferred-theme";
	private string? currentTheme;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await using var _ = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Features/Home/Components/ThemeToggler.razor.js");

			currentTheme = await LocalStorageService.ContainsKeyAsync(StorageKey)
				? await LocalStorageService.GetItemAsync<string>(StorageKey)
				: await JSRuntime.InvokeAsync<string>("getCurrentSystemPreference");

			await JSRuntime.InvokeVoidAsync("setTheme", currentTheme);
			StateHasChanged();
		}
	}

	private async Task ToggleMode()
	{
		currentTheme = currentTheme == "light" ? "dark" : "light";
		await JSRuntime.InvokeVoidAsync("setTheme", currentTheme);
		await LocalStorageService.SetItemAsync(StorageKey, currentTheme);
	}
}
