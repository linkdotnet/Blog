@page "/searchByTag/{tag}"
@using LinkDotNet.Blog.Domain
@using LinkDotNet.Blog.Infrastructure
@using LinkDotNet.Blog.Infrastructure.Persistence
@inject IRepository<BlogPost> BlogPostRepository

<PageTitle>Search for tag: @Tag</PageTitle>

<h3>All posts with Tag <em>@Tag</em></h3>

@for (var i = 0; i < blogPosts.Count; i++)
{
    <ShortBlogPost BlogPost="blogPosts[i]" UseAlternativeStyle="@(i % 2 != 0)"></ShortBlogPost>
}
@code {
    [Parameter, EditorRequired]
    public required string Tag { get; set; }

    IReadOnlyList<BlogPost> blogPosts = PagedList<BlogPost>.Empty;
    protected override async Task OnParametersSetAsync()
    {
        Tag = Uri.UnescapeDataString(Tag);
        blogPosts = await BlogPostRepository.GetAllAsync(
            b => b.IsPublished && b.Tags.Any(t => t == Tag),
            b => b.UpdatedDate);
    }
}
