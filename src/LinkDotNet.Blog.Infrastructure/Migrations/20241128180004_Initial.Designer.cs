// <auto-generated />
using System;
using LinkDotNet.Blog.Infrastructure.Persistence.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinkDotNet.Blog.Infrastructure.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20241128180004_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("LinkDotNet.Blog.Domain.BlogPost", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Likes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviewImageUrl")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("PreviewImageUrlFallback")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReadingTimeInMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ScheduledPublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsPublished", "UpdatedDate")
                        .IsDescending(false, true)
                        .HasDatabaseName("IX_BlogPosts_IsPublished_UpdatedDate");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.BlogPostRecord", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogPostId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("Clicks")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateClicked")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BlogPostRecords");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.ProfileInformationEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProfileInformationEntries");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.ShortCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("MarkdownContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShortCodes");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.SimilarBlogPost", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("SimilarBlogPostIds")
                        .IsRequired()
                        .HasMaxLength(1350)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SimilarBlogPosts");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.Skill", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Capability")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProficiencyLevel")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.Talk", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PresentationTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Talks");
                });

            modelBuilder.Entity("LinkDotNet.Blog.Domain.UserRecord", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateClicked")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlClicked")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
